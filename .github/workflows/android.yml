name: Android CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env: 
  target: aarch64-linux-android
  binstall-args: --no-confirm --no-symlinks
  cache-name: cache

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4.1.1
    - name: Cache
      id: cache
      uses: actions/cache@v3.3.2
      with:
        key: ${{ env.cache-name }}-${{ runner.os }}-${{ runner.arch }}-${{ github.job }}-${{ env.target }}
        path: |
          ~/
          !~/work/twoyi/twoyi/assets
          !~/work/twoyi/twoyi/.*
          !~/work/twoyi/twoyi/*.*
          !~/work/twoyi/twoyi/app/.*
          !~/work/twoyi/twoyi/app/*.*
          !~/work/twoyi/twoyi/app/src
          !~/work/twoyi/twoyi/app/rs/src
          !~/work/twoyi/twoyi/app/rs/.*
          !~/work/twoyi/twoyi/app/rs/*.*
          ~/work/twoyi/twoyi/app/src/main/assets/rootfs.7z
    - name: Download Rootfs from lastest Twoyi.apk release
      shell: bash {0}
      run: |
        sudo apt update
        sudo apt full-upgrade -y
        sudo apt autoremove -y
        [ -f ./app/src/main/assets/rootfs.7z ] && exit 0
        wget https://github.com/erhenjt/twoyi2/releases/download/0.7.5/rootfs.7z
        sudo chmod 666 rootfs.7z
        sudo mv rootfs.7z ../app/src/main/assets/
    - name: Update Grandle JVM Memory
      shell: bash {0}
      run: |
        free -m | head -n-1 | tail -n-1 | xargs -r | cut -d' ' -f2 | xargs bash -c 'echo MEMTOTAL=$0' >> $GITHUB_ENV
        . $GITHUB_ENV
        MEMPERM=$(( ${MEMTOTAL} / $( nproc --all ) ))
        echo "MEMPERM="'"'"${MEMPERM}"'"' >> $GITHUB_ENV
        . $GITHUB_ENV
        sed -i "s/-Xmx4g/-Xmx${MEMTOTAL}m/g" ./gradle.properties
        sed -i "s/-XX:MaxPermSize=2048m/-XX:MaxPermSize=${MEMPERM}m/g" ./gradle.properties
        echo  "./gradle.properties updated:"
        grep 'org.gradle.jvmargs=' ./gradle.properties
    - name: Setup JDK 21
      uses: actions/setup-java@v3.13.0
      with:
        java-version: '21.0.1+12.0.LTS'
        distribution: 'temurin'
        cache: gradle
    - name: Setup NDK
      uses: nttld/setup-ndk@v1.4.1
      with:
        ndk-version: r26b
        local-cache: true
    - name: Cargo Setup toolchain action to ${{ env.target }}
      uses: crusty-pie/toolchain@v1.0.7
      with:
        toolchain: nightly
        targets: ${{ env.target }}
        override: true
    - name: Rustup add ${{ env.target }} and Cargo install cargo-binstall
      shell: bash {0}
      run: |
        rustup target add ${{ env.target }}
        [ -f $HOME/.cargo/bin/cargo-binstall ] && exit 0
        wget -q https://github.com/cargo-bins/cargo-binstall/releases/download/v1.4.5/cargo-binstall-x86_64-unknown-linux-musl.tgz
        [ ! -d $HOME/.cargo/bin ] && mkdir -p $HOME/.cargo/bin
        tar -xf cargo-binstall-x86_64-unknown-linux-musl.tgz -C $HOME/.cargo/bin
        rm cargo-binstall-x86_64-unknown-linux-musl.tgz
        #cargo install cargo-binstall
    - name: Cargo binstall cargo-update cross cargo-xdk
      run: cargo binstall ${{ env.binstall-args }} cargo-update cross cargo-xdk 
    #- name: Cargo Setup to ${{ env.target }}
      #uses: clechasseur/rs-cargo@v2.0.1
      #with:
         #use-cross: true
         #command: 
         #args: --target ${{ env.target }} 
    - name: Cargo Update
      continue-on-error: true
      run: |
        cargo install-update -a
        cd ./app/rs/
        cargo update
        cargo update regex
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      continue-on-error: true
      run: |
        ./gradlew clean
        rm -rf ./app/build ./app/twoyi/build ./twoyi/app/build ./twoyi/build ~/app/build ~/work/app/build ~/work/app/twoyi/build ~/work/twoyi/build ~/work/twoyi/app/build ~/work/twoyi/twoyi/build 
        ./gradlew wrapper --gradle-version=8.4 --warning-mode=all
        ./gradlew --build-cache build -x lintVitalRelease -x lint -Prust-target=arm64
        ./gradlew --build-cache assembleRelease -Prust-target=arm64
    - name: Find Apk
      shell: bash {0}
      run: |
        find ~/ -type d -name 'apk' | xargs -r -I@ find @ -type d -name 'release' -print -quit | xargs -r -I@ find @ -type f -name '*.apk' | ( xargs -r -I@ echo 'RELEASEAPK=@' >> $GITHUB_ENV )
        . $GITHUB_ENV
        [[ ! -n "${RELEASEAPK}" ]] && echo RELEASEAPK=/not-found >> $GITHUB_ENV
        . $GITHUB_ENV
        echo RELEASEAPK=${RELEASEAPK}
    - name: Build Artifacts Twoyi-release.apk
      uses: actions/upload-artifact@v3.1.3
      with:
        name: Twoyi.apk RELEASE
        path: /HOME
